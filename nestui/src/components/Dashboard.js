import React from 'react';
import axios from 'axios';
import fs from 'fs';
//var fs = require("fs");







export default class Dashboard extends React.Component {


    constructor(props) {
        super(props);

        this.state = {
            user: null,
            username: '',
            userimage: '',
            imagefile: ''


        }
        this.handleFile = this.handleFile.bind(this);
        this.handleUpload = this.handleUpload.bind(this);



    }
    handleFile(e) {
        console.log('In Handle file');
        console.log(e.target.files, "$$$$");
        console.log(e.target.files[0], "$$$$");

        let file = e.target.files[0];
        this.setState({ imagefile: file });
    }



    handleUpload(e) {
        

        // console.log('In Component did Mount');
        const jwt = localStorage.getItem('cool-jwt');


        console.log('In Handle Upload');
        var formData = new FormData();
        var imagefile = this.state.imagefile;

        console.log('imageFile', imagefile);
        formData.append("file", imagefile);
        formData.append("name", this.state.username);

        console.log('formData',formData);
        axios.post('http://localhost:5000/auth/upload',formData, {
             headers: {
                "content-type": "multipart/form-data;"
            //     'Content-Type': ''
                 ,authorization: `bearer ${jwt}`
             }
        }).then(
            res => console.log('Response of upload image', res)
        ).catch(e => console.log('ERROR in file uploading', e));

   
   
    }

    componentDidMount() {

        // console.log('In Component did Mount');
        const jwt = localStorage.getItem('cool-jwt');

        // console.log('jwt is here',jwt);

        if (!jwt) {
            console.log('I am in !jwt');
            this.props.history.push('/login');

        }
        else {
            console.log('In else ');
            axios.post('http://localhost:5000/auth/getUser', {}, { headers: { 'authorization': `bearer ${jwt}` } })
                .then(
                    (res) => {
                        console.log('before res.data', res.data);
                        this.setState({ user: res.data });
                        console.log('After res.data', res.data);

                        this.setState({ username: this.state.user.username });

                    })
                .catch((err) => {
                    console.log('err', err);
                    localStorage.removeItem('cool-jwt');
                    this.props.history.push('/login');
                });
        }


        this.getUserImage();

    }

    arrayBufferToBase64(buffer) {


        var fs = require('fs');
        fs.writeFile('thumbnail.jpeg', { buffer }, 'binary',
            function (err) {
                if (err) throw err;
                console.log('File saved.')
            });



    };
    getUserImage() {
        // console.log('In Component did Mount');
        const jwt = localStorage.getItem('cool-jwt');
        var base64Flag = null;
        var imageStr = null;

        // console.log('jwt is here',jwt);

        if (!jwt) {
            console.log('I am in !jwt');
            this.props.history.push('/login');

        }

        axios.post('http://localhost:5000/auth/GetUserPhoto', {}, { headers: { 'authorization': `bearer ${jwt}` } })
            .then(
                (res) => {


                    console.log('ACTUAL PIC DATA', res.data);
                    // this.setState({ userimage: `data:image/jpeg;base64,${data}` });
                    var fs = require('browserify-fs');
                    // string generated by canvas.toDataURL()
                    var img = res.data;
                    // strip off the data: url prefix to get just the base64-encoded bytes
                    //  var data = img.replace(/^data:image\/\w+;base64,/, "");
                    // data=data+'data:image/jpeg;base64,';
                    // console.log('data',data);
                    // var buf = new Buffer(data, 'base64');
                    var path = "/image.jpg";

                    // this.setState({
                    //     userimage: data

                    // });



                    console.log('__dirname', __dirname);
                    fs.writeFile('/MyPresidents/image.jpeg', res.data, 'base64', function (err) {
                        if (err) {
                            return console.log(err);
                        }
                        console.log("The file was saved!");
                    });








                })
            .catch((err) => {
                console.log('err', err);
                this.props.history.push('/login');
            });

        ///////
        // var request = require("request");
        // var options = {
        // method: 'POST',
        //     url: 'http://localhost:5000/auth/GetUserPhoto',
        //     headers:  { 'authorization': `bearer ${jwt}` },
        //     form: {}
        // };
        // request(options, function (error, response, body) {
        //     if (error)
        //         throw new Error(error);
        //   console.log(body);

        //   this.setState({userimage:response.body});
        // });
    }

    render() {

        console.log('Prop ', this.props);


        return (<div>


            <img src={"http://localhost:5000/auth/getProfilePic/" + this.state.username}></img>
            <p>In a Dashboard {this.props.myuser} </p>
            <p>User is {this.state.username} </p>

            <input name="file" onChange={e => this.handleFile(e)} type="file"></input>

            <button type="button" onClick={e => this.handleUpload(e)} ></button>


        </div>)

    }
}

